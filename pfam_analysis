library(readr)
OG <- read_table("~/TFM/Pfam analysis/pfam_outputs/OG20.txt", 
    col_names = FALSE)
View(OG)

categories <- unique(OG$X1)

drosophila <- elegans <- mouse <- human <- vector()

for (category in categories) {
  subset_df <- subset(OG, X1 == category)
  unique_values <- unique(subset_df$X7)
  if (category == "C25G4.2.1") { #susbtitute here elegans gene name
    elegans <- c(elegans, unique_values)
  } else if (category == "FBpp0083317") { #susbtitute here drosophila gene name
    drosophila <- c(drosophila, unique_values)
  } else if (category == "ENSMUSP00000071493.3") { #susbtitute here mouse gene name
    mouse <- c(mouse, unique_values)
  } else if (category == "ENSP00000461388.1") { #susbtitute here human gene name
    human <- c(human, unique_values)
  }
}

library(zoo)

# Find the maximum length among the vectors
max_length <- max(length(drosophila), length(elegans), length(mouse), length(human))

# Fill the vectors with NA values to match the maximum length
drosophila <- `length<-`(drosophila, max_length)
elegans <- `length<-`(elegans, max_length)
mouse <- `length<-`(mouse, max_length)
human <- `length<-`(human, max_length)

# Create the data frame with the padded vectors

df<- data.frame(domains_elegans=elegans, domains_drosophila=drosophila, 
                  domains_mouse=mouse, domains_human=human)

elegans <- na.omit(c(df$domains_elegans))
drosophila <- na.omit(c(df$domains_drosophila))
mouse <- na.omit(c(df$domains_mouse))
human <- na.omit(c(df$domains_human))

# Venn Diagrams of shared domains
library(VennDiagram)
library(RColorBrewer)

myCol <- brewer.pal(4, "Spectral")

venn<-venn.diagram(
  x = list(elegans, drosophila, mouse, human),
  filename = 'OG5_shared_domains_venn.png',
  fill = myCol,
  cat.cex = 0.8,
  category.names = c("C. elegans" , "D. melanongaster " , "M. musuclus", "H. sapiens"),
  output=TRUE,
  main = "OG5 shared domains"
)

# Upset plots of shared domains

library(UpSetR)

x=list("C. elegans"= elegans,"D. melanogaster" = drosophila, 
       "M. musculus" = mouse, "H. sapiens" = human)

upsetplot<-upset(fromList(x), order.by="freq", 
      sets.bar.color = c("lightgreen","lightblue", "darkgreen", "purple"),
      text.scale =  2)

upsetplot
